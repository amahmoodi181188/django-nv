name: Django

on:
  push:
    branches: 
      - main
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - run: echo "This is a build step!"

  test:
    runs-on: ubuntu-20.04
    steps:
      - run: echo "This is a test step!"
  oast:
    runs-on: ubuntu-20.04
    needs: test
    steps:
      - uses: actions/checkout@v2

      - run: docker run --rm -v $(pwd):/src hysnsec/safety check -r requirements.txt --json > oast-results.json

      - uses: actions/upload-artifact@v4
        with:
          name: Safety
          path: oast-results.json
        if: always()  
  
  oast-snyk:
    runs-on: ubuntu-20.04
    needs: test
    steps:
      - uses: actions/checkout@master
      - uses: snyk/actions/setup@master
      - uses: actions/setup-go@v1
        with:
          go-version: "1.13"

      - uses: actions/setup-node@v2
        with:
          node-version: '10.x'

      - name: Install Node modules
        run: npm install

      - name: Run Snyk
        run: snyk test --json > snyk-results.json
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - uses: actions/upload-artifact@v2
        with:
          name: Snyk
          path: snyk-results.json
        if: always()        # what is this for?

  integration:
    runs-on: ubuntu-20.04
    continue-on-error: true  # Allows the whole job to pass even if it fails
    steps:
      - name: Integration Step
        run: echo "This is the integration step!"
      - name: Simulate Failure
        run: exit 2

  artifact:
    runs-on: ubuntu-20.04
    steps:
      - name: Create a file
        run: echo "Hello" > hello.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: hello-artifact
          path: hello.txt

  prod:
    runs-on: ubuntu-20.04
    steps:
      - run: echo "This is a prod step!"
  
    
